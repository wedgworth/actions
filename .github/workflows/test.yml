name: Shared Test and Build
on:
  workflow_call:
    inputs:
      python-src-dir:
        required: true
        type: string
        description: "Directory containing Python source code to lint"
      has-frontend:
        required: false
        type: boolean
        default: true
        description: "Whether this project has frontend code to test"
    secrets:
      CODECOV_TOKEN:
        required: true
      CR_UN:
        required: true
      CR_PAT:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true

env:
  PYTHON_VERSION: "3.13"
  NODE_VERSION: "20"

jobs:
  lint-python:
    name: Lint - Python
    runs-on: namespace-profile-default
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Lint
        uses: astral-sh/ruff-action@v3
        with:
          src: ${{ inputs.python-src-dir }}

  install-node-deps:
    name: Install Node Dependencies
    runs-on: namespace-profile-default
    if: inputs.has-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: wedgworth/actions/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}

  test-frontend:
    name: Test - Frontend
    runs-on: namespace-profile-default
    if: inputs.has-frontend
    needs: [install-node-deps]
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v5

      - uses: wedgworth/actions/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test
        run: yarn test

      - uses: wedgworth/actions/.github/actions/report-coverage@main
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          coverage-file: ./js-coverage/coverage-final.json
          flags: frontend

  bundle-tracking:
    name: Bundle Tracking
    runs-on: namespace-profile-default
    if: inputs.has-frontend
    needs: [install-node-deps]
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v5

      - uses: wedgworth/actions/.github/actions/setup-node@main
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build and Upload Bundle
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: yarn build
          
  build-and-push-images:
    name: Build, Test and Push Images
    runs-on: namespace-profile-builder
    needs: [lint-python, test-frontend, bundle-tracking]
    if: |
      always() &&
      (needs.lint-python.result == 'success') &&
      (!inputs.has-frontend || needs.test-frontend.result == 'success')
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_SSL: "off"
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
      DJANGO_DEBUG: 0
      REDIS_URL: "redis://localhost:6379"
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v5

      - uses: wedgworth/actions/.github/actions/setup-docker@main
        with:
          cr-username: ${{ secrets.CR_UN }}
          cr-token: ${{ secrets.CR_PAT }}

      - name: Extract Tags
        uses: wedgworth/actions/.github/actions/docker-tags@main
        id: meta
        with:
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=sha

      - name: Build Test Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          build-args: |
            DEV_MODE=1
            GIT_COMMIT=${{ github.sha }}
            GIT_VERSION=${{ github.ref }}
            VERSION=${{ steps.meta.outputs.version }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Check Migrations
        run: docker run -e DATABASE_URL --network host ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }} python manage.py makemigrations --check --dry-run

      - name: Python Test
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          mkdir ci-shared && \
          chmod 777 ci-shared && \
          docker run \
            -v "${{ github.workspace }}/ci-shared:/opt/shared" \
            -e DATABASE_URL \
            -e REDIS_URL \
            -e GITHUB_SHA \
            --network host\
            ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }} ./test.sh

      - uses: wedgworth/actions/.github/actions/report-coverage@main
        with:
            codecov-token: ${{ secrets.CODECOV_TOKEN }}
            coverage-file: ./ci-shared/coverage.xml
            flags: backend

      - name: Build and Push Production Image
        uses: docker/build-push-action@v6
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          context: .
          file: ./.docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            DEV_MODE=0
            GIT_COMMIT=${{ github.sha }}
            GIT_VERSION=${{ github.ref }}
            VERSION=${{ steps.meta.outputs.version }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
